-- phpMyAdmin SQL Dump
-- version 4.8.3
-- https://www.phpmyadmin.net/
--
-- Хост: 127.0.0.1:3306
-- Время создания: Июн 02 2020 г., 18:12
-- Версия сервера: 5.7.23
-- Версия PHP: 7.2.10

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- База данных: `diplom`
--

-- --------------------------------------------------------

--
-- Структура таблицы `blog`
--

CREATE TABLE `blog` (
  `id` int(11) NOT NULL,
  `title` varchar(255) NOT NULL,
  `text` text NOT NULL,
  `poster` varchar(255) NOT NULL,
  `postedAt` date NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `blog`
--

INSERT INTO `blog` (`id`, `title`, `text`, `poster`, `postedAt`) VALUES
(1, 'ES6, ES8, ES2017: ECMAScript деген не және оның JavaScript-тен қандай айырмашылығы бар', '<p>JavaScript тілін үйрену көптеген себептер бойынша естен шығаруы мүмкін, сол себептердің бірі — акронимдер. Қысқартылған сөздер сізді естен шығармас үшін, біз бұл мақалада олардың мағынасы мен шығу тарихын талдаймыз.</p>\r\n<div class=\"ant-divider ant-divider-horizontal\" role=\"separator\"></div>\r\n<h2 class=\"ant-typography\">ECMAScript дегеніміз не?</h2>\r\n<p>Алдымен біраз тарихқа шолу жасайық. JavaScript Netscape браузеріне арналған скриптік тіл ретінде жасалған. Кейін ол ECMA International-ға стандарттау үшін жіберілді (ECMA — ақпараттық және коммуникациялық технологияларды стандарттау ісімен айналысатын ассоциация). Бұл ECMAScript деп аталатын жаңа тілдік стандарттың пайда болуына әкеп соқты.\r\n</p><p>\r\nJavaScript-тің кейінгі нұсқалары енді ECMAScript стандартының негізінде қаланған. Жай айтқанда, ECMAScript — стандарт, ал JavaScript — бұл стандарттың ең танымал жүзеге асырылуы.</p>\r\n<h2 class=\"ant-typography\">ES дегеніміз не? Нұсқалар тарихы</h2>\r\n<p>ES — бұл жай ғана ECMAScript-тің қысқа атауы. ECMAScript-тің әрбір нұсқасы ES аббревиатурасы мен оның кейінгі нөміріне ие болады. ECMAScript-тің барлығы 8 нұсқасы бар. ES1 1997 жылдың маусым айында, ES2 — 1998 жылдың маусым айында, ES4 — 1999 жылдың желтоқсан айында шықты, ал ES4 — қабылданбай қалды. Бұл нұсқалар ескіргендіңтен оларды қарастырмай-ақ, соңғы төртеуіне бірден көшейік.\r\n</p><p>\r\nES5 үшінші нұсқаның (ES3) шығуынан 10 жыл өткеннен кейін, 2009 жылдың желтоқсан айында шығарылды. Өзгерістердің ішінен белгілеуге болатындар:</p>\r\n<ul>\r\n<li>қатаң тәріпті қамтамасыз ету (strict mode);</li>\r\n<li>getters жәнеsetters аксессорлары;</li>\r\n<li>резервтелген сөздерді сипат кілттері ретінде қолдану және массивтердің соңына үтірлі нүкте қою мүмкіндігі;</li>\r\n<li>көпжолдық жолдық литералдар;</li>\r\n<li>стандартты кітапханадағы жаңа функционалдылық;</li>\r\n<li>JSON-ді қамтамасыз ету.</li>\r\n</ul>\r\n<p>ES6/ES2015 нұсқасы 2015 жылдың маусым айында шықты. Бұл пакет шыққаннан кейін оның атауы белгілі бір түсініспеушіліктерді әкеп соқты, себебі ES6 және ES2015 — бұл екеуі де бір нәрсе еді. Осы пакеттің шығуымен бірге комитет жыл сайын жаңа пакет шығарып отыратынын жариялады. Сол себептен осы нұсқа шығу жылын көрсету үшін ES2015 деп атын ауыстырды. Кейінгі нұсқалар да өздерінің шығу жылына байланысты аталатын болды. ES2015-те жасалған өзгерістер:</p>\r\n<ul>\r\n<li>деструкторлайтын иелендіру еңгізілді;</li>\r\n<li>бағыттамалық функциялар еңгізілді;</li>\r\n<li>шаблондық жолдарда жолдарды ` (кері тырнақша) көмегімен жариялауға болады. Шаблондық жолдар көпжолды бола алады, сонымен қатар интерполяциялана алады;</li>\r\n<li>let және const — айнымалыларды жариялауға керек var-дың баламалары. «Уақытша жансыз зонасы» қосылды;</li>\r\n<li>итератор мен итерация протоколы енді тек массивтердің ғана емес, кез келген объектіні іріктеу әдісін анықтайды. Symbol кез келген объектіге итераторды меншіктеу үшін қолданылады;</li>\r\n<li>генератор-функциялар еңгізілді. Олар элеметтер реттілігін құру үшін yield қолданады. Генератор-функциялар басқа генератор-функцияларға табыстау үшін yield* қолдана алады. Сонымен қатар олар екі протокол да жүзеге асыратын генератор объектісін қайтара алады;</li>\r\n<li>промистер еңгізілді.</li>\r\n</ul>\r\n<p>ES2016 (ES7) 2016 жылдың маусым айында шықты. ECMAScript-тің осы нұсқасының өзгерістерінің ішінен келесілерді белгілеуге болады:</p>\r\n<ul>\r\n<li>санның дәрежесін табу операторы **;</li>\r\n<li>Array.prototype.includes — жіберілген аргумент массивте бар ма екенін тексеретін әдіс.</li>\r\n</ul>\r\n<p>Тағы бір жылдан кейін ES2017 (ES8) нұсқасы шықты. Бұл стандарт келесі өзгерістерге ие болды:</p>\r\n<ul>\r\n<li>ресми түрде үйлесімсіздікті қамтамасыз ету (async/await);</li>\r\n<li>функцияның параметрлерінде «ілмелі» үтірлер. Функцияның аргументтер тізімінің соңына үтір қою мүмкіндігі қосылды;</li>\r\n<li>жолдармен жұмыс істеу үшін екі әдіс еңгізілді: padStart() және padEnd(). padStart() әдісі жолдың басының сол жағына, ал padEnd() жолдың соңының оң жағына қосымша символдар қосады;</li>\r\n<li>Object.getOwnPropertyDescriptors() — объектінің барлық жеке сипаттар дескрипторлары бар массив қайтаратын функция;</li>\r\n<li>жадыны бөлу және Atomics объектісі еңгізілді.</li>\r\n</ul>\r\n<p>ES.Next деп ECMAScript-тің жаңа (ең соңғы) нұсқасын айтады. Әрбір жаңа нұсқа тілге жаңа функциялар әкелетінін айта кету керек.</p>\r\n<h2 class=\"ant-typography\">Қорытынды</h2>\r\n<ul>\r\n<li>ECMAscript жыл сайын шығып тұрады;</li>\r\n<li>алғашқы пакеттері ES1, ES2, ES3, ES4, ES5 деп аталған;</li>\r\n<li>жаңа нұсқалары (2015 жылдан бастап) ES2015, ES2016, ES2017 (ES аббревиатурасы + шығу жылы) деген аттарға ие болды;</li>\r\n<li>ECMAScript стандарт болып табылады, ал JavaScript — бұл стандарттың ең танымал жүзеге асырылуы. Басқа іске асырылған тілдер ішінен белгілеп алуға болатындар: SpiderMonkey, V8 және ActionScript.</li>\r\n</ul>', 'ecmascript.png', '2020-04-10'),
(2, 'Биттік операциялар туралы', '<p>Бұл мақала сізге биттік операциялар қалай жұмыс істейтінін түсіндіруге тырысады. Бір қарағанда олар қиын, пайдасыз немесе мағынасы жоқ болып көрінуі мүмкін. Бірақ ол олай емес.</p>\n<h2 class=\"ant-typography\">Кіріспе</h2>\n<p>Биттік операторлар санның биттерімен жұмыс істейді. Сондықтан мысалдардағы сандар екілік санау жүйесінде болады.</p>\n<p>Біз келесі биттік операторларды қарастырамыз:</p>\n<ul>\n<li>| (Биттік НЕМЕСЕ (OR)),</li>\n<li>&amp; (Биттік ЖӘНЕ (AND)),</li>\n<li>^ (Болғызбайтын НЕМЕСЕ (XOR)),</li>\n<li>~ (Биттік теріске шығару (NOT)),</li>\n<li>&lt;&lt; (Биттік солға жылжыту),</li>\n<li>&gt;&gt; (Биттік оңға жылжыту).</li>\n</ul>\n<p>Биттік операциялар дискреттік математикада зерттеледі. Сонымен қатар, логикалық вентильдердің (сандық схемалардың негізгі элементі) жұмыс логикасы биттік операциялар негізінде құрылғандықтан, олар сандық техниканың негізінде жатыр. Дискреттік математикада да, сандық техникада да биттік операциялардың жұмысын сипаттау үшін ақиқаттық кестесі қолданылады. Ақиқаттық кестесі биттік операцияларды түсінуді айтарлықтай жеңілдетеді. Сондықтан да біз ол кестені бұл мақалада көрсетіп кетеміз. Бірақ ол кестені жоғарғы деңгейлі программалау тілдеріндегі биттік операторларды түсіндіру кезінде өте сирек қолданады.</p>\n<p>Сізге биттік операторлар туралы тағы не білу керек:</p>\n<ol>\n<li>Кейбір биттік операторлар қарапайым, сіз білетін операторларға ұқсас болуы мүмкін (&amp;&amp;, ||). Олардың ұқсастығы бар болғанымен оларды шатастыруға болмайды.</li>\n<li>Биттік операциялардың көбі құрама меншіктеу операциясы болып табылады.</li>\n</ol>', 'bitwise.jpg', '2020-04-13'),
(3, '5 болашақ бағдарламалау тілдері', '<p class=\"article_decoration_first article_decoration_last\">Болашақта қандай бағдарламалау тілдері бірінші орындарда тұрады деп ойлайсыздар? Біз деректерді анализдеу және мобильдік ОЖ-лерде бар үрдістерге байланысты болашақта өте жақсы нәтиже бере алатын бес тілді таңдадық.</p>\n<h2 class=\"article_decoration_first article_decoration_last article_decoration_before\">Kotlin<span id=\"kotlin\" class=\"article_anchor_button\"></span></h2>\n<figure class=\"article_decoration_first article_decoration_last\" data-type=\"101\" data-mode=\"1\" data-done=\"1\">\n<figcaption data-captions=\"[&quot;Kotlin&quot;]\"></figcaption>\nKotlin тілі танымал емес проекттен Android ОЖ-сіне бағдарлама жасауға арналған мықты тілге айналды. Android SDK-ның жаңа нұсқасы шыққан сайын, Kotlin тілін қамтамасыз ету де артып жатыр. Google бұл ісімен осы тілде Android-бағдарламаларды жазуды қолдайтынын көрсетті.</figure>\n<p>Pusher жүргізген <a title=\"https://pusher.com/state-of-kotlin\" href=\"https://vk.com/away.php?to=https%3A%2F%2Fpusher.com%2Fstate-of-kotlin\" target=\"_blank\" rel=\"noopener\">сауалнама </a>Kotlin тілін қолданатын программистердің 79,5% оны Android-қа бағдарлама жазу үшін, ал 31% &mdash; бэкенд/серверлермен жұмыс істеу үшін қолданатынын көрсетті.</p>\n<p class=\" article_decoration_last\">Google-дың қолдауы және программистердің қызығушылығы Kotlin алдағы уақытта кең қолданылатын тілдердің бірі болатынын білдіреді. Оған қоса Kotlin тілі Google-дың болашақта шығатын Fuchsia операциялық жүйесінде үлкен рөл атқарады деген сыбыс бар. Ал Google-дың бүкіләлемдік таралуын ескерсек, бұл программалау тілін кең қолданылуына әкеп соғатыны сөзсіз.</p>\n<h2 class=\"article_decoration_first article_decoration_last article_decoration_before\">Swift<span id=\"swift\" class=\"article_anchor_button\"></span></h2>\n<p class=\"article_decoration_first\">Бірнеше жыл бұрын, Apple өзінің экосистемасына арналған бағдарламаларды жасауға қолданылатын Objective-C тілінің орнына оның кемшіліктерін жоюға арналған жаңа Swift тілін қолдануды шешті.</p>\n<p>Кезінде осы екі тіл бәсекелес болса, енді бұл жарыста Swift жеңгені сөзсіз анық. Оған дәлел &mdash; Apple осы тілді ресми түрде қолдауы.</p>\n<p class=\" article_decoration_last\">Сонда да, бұл Objective-C жақын болашақта сахнадан толығымен кететінін білдірмейді. Себебі, қамтамасыз етуді талап ететін legacy-код әлі толып жатр. Бірақ Swift тілі Apple-да программалаудың негізі болуы әбден мүмкін. Бұл тілде көптеген құрылғыларға арналған ПЖ (программалық жасақтама) жазылатын болады (олардың ішінде: macOS, iOS және watchOS та бар).</p>\n<h2 class=\"article_decoration_first article_decoration_last article_decoration_before\">Rust</h2>\n<p class=\"article_decoration_first article_decoration_last article_decoration_before\"><span id=\"rust\" class=\"article_anchor_button\"></span>Rust тілі өте көп адамға ұнайды. Мысалы, 2018 жылы әр жыл сайын жүріп тұратын Stack Overflow-дың <a title=\"https://insights.stackoverflow.com/survey/2018/\" href=\"https://vk.com/away.php?to=https%3A%2F%2Finsights.stackoverflow.com%2Fsurvey%2F2018%2F\" target=\"_blank\" rel=\"noopener\">сауалнамасы </a>бойынша Rust тілі &laquo;ең сүйікті тіл&raquo; болып таңдалды. Бұл рейтингте ол Kotlin-ді де асып кетті. Бұл дегеніміз программистер басқа тілдерден қарағанда осы тілді көбірек қолданғысы келетінін білдіреді.</p>\n<p>Бұл &laquo;махаббаттың&raquo; негізі неде? Rust-тің коды ашық, бұл тілде жадының &laquo;ақылды&raquo; моделі іске асырылған (ешқандай аспалы немесе нөлдік көрсеткіштер және жарыс жағдайы жоқ). Бұл тілде де C және C++ тілдеріндегі сияқты нақты синтаксис. Rust тәжірибесіз қолданушыларға жеңіл болып табылады және веб пен ОЖ-лерде қолдану мүмкіндігі бар.</p>\n<p class=\" article_decoration_last\">Басқаша айтқанда, Rust алдағы уақытта мықты тілдердің біріне айналады деуге болады. Дегенмен, ол C мен C++ тің бәсекелесіне айналуына дейін біраз уақыт өтуі мүмкін. Әзірше ол тіпті <a title=\"https://www.tiobe.com/tiobe-index/\" href=\"https://vk.com/away.php?to=https%3A%2F%2Fwww.tiobe.com%2Ftiobe-index%2F\" target=\"_blank\" rel=\"noopener\">TIOBE-нің топ-20 тілдер</a> қатарына да кірмеді.</p>\n<h2 class=\"article_decoration_first article_decoration_last article_decoration_before\">MATLAB<span id=\"matlab\" class=\"article_anchor_button\"></span></h2>\n<figure class=\"article_decoration_first article_decoration_last\" data-type=\"101\" data-mode=\"1\" data-done=\"1\">\n<figcaption data-captions=\"[&quot;Matlab&quot;]\"></figcaption>\nMATLAB жақын болашақта Java, C немесе Python тілдерін түрлі рейтингтердің алғашқы орындарынан құлата алмаса да, бұл тіл барған сайын жиі қолданылатын болып барады. Мысалы, TIOBE <a title=\"https://www.tiobe.com/tiobe-index/\" href=\"https://vk.com/away.php?to=https%3A%2F%2Fwww.tiobe.com%2Ftiobe-index%2F\" target=\"_blank\" rel=\"noopener\">рейтингінде </a>2018 жылы MATLAB 17-ші орыннан 13-ші орынға көтерілді.</figure>\n<p class=\" article_decoration_last\">MATLAB неліктен жиі қолданылатын болды? Бұл тіл деректерді анализдеуде қолданылады, ол Python, Fortran және Java сияқты танымал тілдермен бірге жақсы жұмыс істей алады. Әр жыл сайын өз жұмысында деректерді анализдеуді қолданатын компаниялардың саны артуына байланысты, MATLAB нарықта үлкен орын алуы мүмкін.</p>\n<h2 class=\"article_decoration_first article_decoration_last article_decoration_before\">Python</h2>\n<p class=\"article_decoration_first article_decoration_last article_decoration_before\"><span id=\"python\" class=\"article_anchor_button\"></span>Ия, Python ешқайда кетпейді: себебі, Python ол үшін тым танымал және бұл тіл <a title=\"https://spectrum.ieee.org/static/interactive-the-top-programming-languages-2018\" href=\"https://vk.com/away.php?to=https%3A%2F%2Fspectrum.ieee.org%2Fstatic%2Finteractive-the-top-programming-languages-2018\" target=\"_blank\" rel=\"noopener\">көптеген, неше түрлі платформаларда</a> қолданылады.</p>\n<p>&nbsp;</p>', '1f88c875-24ce-4d4f-9e7a-a0d81833cf6e.jpg', '2020-04-05');

-- --------------------------------------------------------

--
-- Структура таблицы `books`
--

CREATE TABLE `books` (
  `id` int(11) NOT NULL,
  `name` varchar(255) NOT NULL,
  `poster` varchar(255) NOT NULL,
  `fileUrl` varchar(255) NOT NULL,
  `author` varchar(255) NOT NULL,
  `description` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `books`
--

INSERT INTO `books` (`id`, `name`, `poster`, `fileUrl`, `author`, `description`) VALUES
(1, 'C/C++ тілдерінде программалау', 'cpp_boribai.png', '', 'Б. Бөрібаев', 'Оқу құралында Ақтөбе өңірлік мемлекеттік университетінің 5В060200 - информатика мамандығына арналған оқу бағдарламасына сәйкес теориялық материалдар, зертханалык жұмыстарды орындауға арналған қажетті негізгі әдістемелер жиынтығы баяндалған. Оқу құралы жоғары оқу орындары студенттеріне, магистранттарга, оқытушыларға және кәсіптік-техникалық колледж оқушыларына арналған.'),
(2, 'C# тілінде программалау', 'csh_boribai.png', 'test.ru', 'Б. Бөрібаев', 'Оқу құралы заманауи компьютерлік технологиялардың маңызды аспектерілерінің біріне арналған - адам мен компьютер арасындағы байланыс нүктесі деп атауға болатын жоғары сапалы адам-компьютерлік интерфейстi көру, соңғысын қолданушылардың мұқтаждыктарына қарай ыңғайлы және сезімтал ету. «Адам мен компьютерллік жүйелер арасындағы өзара әрекеттесу интерфейстері элективті курс бойынша даярланған оқу құралы 5B070300 «Ақпараттық жүйелер» мамандығының бакалавр студенттеріне, магистранттар мен адам мен компьютер арасындағы қарым-қатынасты өзгерту саласындағы ақпараттық технологияларды қолданумен байланысты пәндер бойынша оқу үдepicін қамтамасыздандыратын оқытушыларға арналған. Оқу құралы оқу материалдарының жинағынан: теориялық курстар, зертханалық, тәжірибелерден, глоссарийден, өзін-өзі тексеру сұрақтарынан, пайдаланылатын әдебиет тізімінен тұрады. Оқу құралының мазмұны 5В070300 «Ақпараттық жүйелер» мамандығы бойынша Қазақстан Республикасының Мемлекеттік білім беру стандартарының талаптарына сәйкес келеді.'),
(3, 'Ақпараттық жүйелердің негіздері', 'nocover.png', '', 'Яскевич Т. В.', 'Оқу құралында жүйелердің жалпы теориясымен және ақпарат теориясымен байланысы тұрғысынан алғанда ақпараттық жүйелердің негіздері мазмұндалған. Компьютерлік жүйелерде мәліметтерді көрсетудің тәсілдері мен оларды өңдеу технологиялары талқыланады. Материалды бекіту үшін әрбір тақырып бойынша мысалдар келтірілген. Оқу құралы 5В070300 «Ақпараттық жүйелер», 5В070400 «Есептеу техникасы мен программалық қамтама» мамандықтарының студенттері мен магистранттарына арналған. '),
(4, 'WEB-технологиялар ', 'nocover.png', '', 'Асылбеков У. А.', 'Осы кітап ғаламтор желісі жұмысының базалық принциптерін сипаттайды, оның iшкі және тұтынушы-сервер шешімі арасында туындайтын процесстерді ашады. Әр түрлі бағдарламалардың өзара қимылдарын және ақпараттық жүйелерді ғаламтор желісі арқылы түсіндіреді, ол жалпы түрде web-технологияның нeгізi болып табылады. Kiтaп информатика және есептеу техникасы, ақпараттық жүйелер және технология, ақпараттық технологияны бағдарламалық қамтамасыз ету, ақпараттық ресурстарды басқару бағыты бойынша оқитын студенттерге қажет. Ол web-технологияның негіздерін түcіндipy және ғаламтор желісінің жұмысын ұсыну бойынша тамаша құрал ретінде қызмет eтeді. Материалдарды қолайлы игеру үшін кітап екі бөлімнен тұрады.'),
(5, 'IT - инфрақұрылымы', 'nocover.png', 'test.ru', 'Нурпеисова Т. Б.', ' «IT-инфрақұрылымы» міндетті курсы бойынша оқу құралы әртүрлі саладағы ұйымдарда инфрақұрылымды басқару мен дамыту облысындағы ақпараттық технологияларды қолданумен байланысты пәндер бойынша оқу үрдісін қамтамасыз ететін оқытушылар, магистранттар, 5B070300 мамандығының бакалавриат студенттеріне ғана емес, сонымен қатар IT-инфрақұрылымды тиімді құру мен жетілдірудегі практикалық дағдыларды алуға ниeттi барлық пайдаланушылар үшiн арналған. Құрал оқу материалдарының кешенін ұсынады және теориялық курстан, зертханалық сабақтардан, глоссарийден, өзін-өзі тексеруге арналған сұрақтардан, қолданылған әдебиеттер тізімінен тұрады. Курсты оқу кезінде білім алушылар ұйымның IT-инфрақұрылымын басқарудың құралдары мен жүйелерінің, бизнеске бағытталған ақпараттық технологиялардың теориялық негіздерін меңгереді, сондай-ақ IТ-инфрақұрылымды басқарудың стандарттарымен және әдістемесімен танысады. Оқу құралының мазмұны 5В070300 «Ақпараттық жүйелер» мамандығы бойынша типтік оқу бағдарламасының талаптарына сәйкес келеді.');

-- --------------------------------------------------------

--
-- Структура таблицы `categories_question`
--

CREATE TABLE `categories_question` (
  `id` int(11) NOT NULL,
  `name` varchar(255) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `categories_question`
--

INSERT INTO `categories_question` (`id`, `name`) VALUES
(1, 'Веб-жобалау'),
(2, 'Жасанды интеллект'),
(3, 'Python / Java / Go'),
(4, 'DevOps'),
(5, 'Мобильдік жобалау (iOS, Android)'),
(6, 'Big Data'),
(7, 'Жүйелік және бизнес-аналитика'),
(8, 'Ойындар жобалау (Game Dev)'),
(9, 'Ақпараттық қауіпсіздік'),
(10, 'Дизайн'),
(11, 'Интернет-маркетинг'),
(12, 'Қалған сұрақтар');

-- --------------------------------------------------------

--
-- Структура таблицы `chapters`
--

CREATE TABLE `chapters` (
  `id` int(11) NOT NULL,
  `name` varchar(255) NOT NULL,
  `text` text NOT NULL,
  `sectionId` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `chapters`
--

INSERT INTO `chapters` (`id`, `name`, `text`, `sectionId`) VALUES
(1, 'Python программалау тілі', '<p>Python - әр түрлі қосымшаларды құруға арналған жоғары деңгейдегі танымал бағдарламалау тілі. Бұл веб-қосымшалар, ойындар және жұмыс үстелі бағдарламалары және мәліметтер базасымен жұмыс істеу. Машина жасау және жасанды интеллект саласындағы зерттеулерде өте кең таралған питон алынды.</p>\r\n<p>Python алғашқы тілін 1991 жылы голландиялық құрастырушы Гуидо Ван Россум жариялады. Содан бері бұл тіл ұзақ жолға түсті. 2000 жылғы нұсқа 2000 жылы, ал 2008 жылы 3.0 нұсқасы жарық көрді. Нұсқалар арасындағы осындай үлкен алшақтыққа қарамастан, құлату үнемі пайда болады. Сонымен, осы материалды жазу кезінде қазіргі кездегі нұсқа - 3,7. Барлық шығарылымдар, нұсқалар және тілдегі өзгерістер туралы толығырақ ақпаратты, сондай-ақ аудармашылардың өзі және жұмыс үшін қажетті қызметтік бағдарламалар және басқа да пайдалы ақпаратты <a href=\"https://www.python.org/\" target=\"_blank\">https://www.python.org/</a> ресми сайтынан табуға болады.</p>\r\n<p>Python бағдарламалау тілінің негізгі белгілері:</p>\r\n<ul>\r\n<li>Сценарий тілі. Бағдарлама коды сценарийлер ретінде анықталған.</li>\r\n<li>Бағдарламалық парадигмалардың алуан түрін, соның ішінде объектіге бағытталған және функционалды парадигмаларды қолдау.</li>\r\n<li>Бағдарламаларды түсіндіру. Сценарийлермен жұмыс істеу үшін сізге сценарийді іске қосатын және аудармашы керек.\r\n<p>Python бағдарламасын іске қосу келесідей. Алдымен біз мәтіндік редакторға сценарийді берілген бағдарламалау тіліндегі өрнектер жиынтығымен жазамыз. Біз бұл сценарийді орындау үшін аудармашыға тапсырамыз. Аудармашы кодты аралық байтодқа аударады, содан кейін виртуалды машина алынған байт кодты операциялық жүйемен орындалатын нұсқаулар жиынтығына аударады.</p>\r\n<p>Айта кету керек, аудармашы бастапқы кодты ресми түрде байтекке және виртуалды машина арқылы байт кодты машиналық нұсқаулық жиынтығына аударғанмен, олар екі түрлі процесті білдіреді, бірақ іс жүзінде олар аудармашының өзінде біріктірілген.</p>\r\n</li>\r\n<li>Портативтілік және платформаның тәуелсіздігі. Бізде қандай амалдық жүйенің болғаны маңызды емес - Windows, Mac OS, Linux, аудармашы болса, барлық осы ОС-да жұмыс істейтін сценарий жазу жеткілікті</li>\r\n<li>Жадты автоматты басқару</li>\r\n<li>Динамикалық типизация</li>\r\n</ul>\r\n<p>Python - өте қарапайым бағдарламалау тілі, ол қысқа, сонымен бірге қарапайым және түсінікті синтаксиске ие. Сәйкесінше, оны үйрену оңай, ал іс жүзінде бұл оқытудың ең танымал бағдарламалау тілдерінің бірі. Атап айтқанда, 2014 жылы Америка Құрама Штаттарында оқыту үшін ең танымал бағдарламалау тілі болып танылды.\r\n</p><p>\r\nPython тек оқыту саласында ғана емес, сонымен қатар коммерциялық бағдарламаларды жазумен де танымал. Демек, көптеген кітапханалар біз қолдана алатын осы тіл үшін жазылған.\r\n</p><p>\r\nСонымен қатар, бұл бағдарламалау тілі өте үлкен қауымдастыққа ие, интернетте сіз көптеген пайдалы материалдар, мысалдар таба аласыз және осы тілде мамандардан білікті көмек ала аласыз.</p>\r\n', 1),
(2, 'Python тіліндегі алғашқы программа', '<p>Соңғы тақырыпта айтылғандай, аудармашыны орнатқаннан кейін біз Python-да қосымшалар жасай бастаймыз. Сонымен, алғашқы қарапайым бағдарламаны жасаңыз.\r\n</p><p>\r\nСоңғы тақырыпта айтылғандай, егер орнату кезінде мекен-жайы өзгермеген болса, аудармашы бағдарламасы әдепкі бойынша Linux-қа usr / local / bin / python37 жолымен, ал Windows-та C: \\ Users \\ [username] \\ AppData \\ Local арқылы орнатылады. \\ Бағдарламалар \\ Python \\ Python37 \\ және python.exe деп аталатын файлды ұсынады.\r\n</p><p>\r\nАудармашыны іске қосып, оған келесі жолды енгізіңіз:</p>\r\n<p class=\"code python\">print(\"hello world\")</p>\r\n', 1),
(3, 'Программа жазуға кіріспе', '', 2),
(4, 'Айнымалылар және мәліметтер типі', '', 2),
(5, 'Сандармен жұмыс', '', 2),
(6, 'Шартты операторлар', '', 2),
(7, 'Жолдармен жұмыс', '', 2),
(8, 'If шартты конструкциясы', '', 2),
(9, 'Циклдар', '', 2),
(10, 'Функциялар', '', 2),
(11, 'Айнымалылардың көрсету аймағы', '', 2),
(12, 'Модульдер', '', 2),
(13, 'Тізімдер', '', 3),
(14, 'Кортеждер', '', 3),
(15, 'Сөздіктер', '', 3),
(16, 'Файлдарды ашу және жабу', '', 4),
(17, 'Мәтіндік файлдар', '', 4),
(18, 'Бинарлы файлдар', '', 4),
(19, 'Жолдармен жұмыс', '', 5),
(20, 'Жолдардың басты әдістері', '', 5),
(21, 'Форматтау', '', 5),
(22, 'Random модулі', '', 6),
(23, 'Math модулі', '', 6),
(24, 'Locale модулі', '', 6),
(25, 'Класстар мен объектілер', '', 7),
(26, 'Инкапсуляция', '', 7),
(27, 'Мұрағаттау', '', 7),
(28, 'Полиморфизм', '', 7),
(29, 'Datetime модулі', '', 8),
(30, 'Уақытпен операциялар', '', 8);

-- --------------------------------------------------------

--
-- Структура таблицы `comments`
--

CREATE TABLE `comments` (
  `id` int(11) NOT NULL,
  `userId` int(11) NOT NULL,
  `targetId` int(11) NOT NULL,
  `type` varchar(255) NOT NULL DEFAULT 'course',
  `msg` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `comments`
--

INSERT INTO `comments` (`id`, `userId`, `targetId`, `type`, `msg`) VALUES
(1, 1, 1, 'course', 'Керемет курс'),
(2, 2, 1, 'course', 'Python-ды қазақ тілінде қайдан үйренуге болатынын іздеп жүр едім. Рахмет сіздерге'),
(3, 1, 1, 'book', 'Жақсы кітап'),
(4, 1, 2, 'user', 'Сәлем'),
(5, 1, 3, 'user', 'Сәлем'),
(7, 1, 1, 'blog', 'Сонда бұл сайт ES6-да жазылған ба?'),
(8, 1, 3, 'book', 'Осы кітап бойынша кезінде ОИС деген пәнді оқығанбыз'),
(9, 2, 2, 'user', 'Мадияр Болатов, сәлем. қалайсың?'),
(10, 2, 1, 'user', 'Қазір қандай тілді үйреніп жүрсің?'),
(11, 1, 3, 'question', 'Википедиядан оқысаң болады. Сол жерде жақсы түсіндірілген');

-- --------------------------------------------------------

--
-- Структура таблицы `courses`
--

CREATE TABLE `courses` (
  `id` int(11) NOT NULL,
  `name` varchar(255) NOT NULL,
  `description` varchar(255) NOT NULL,
  `poster` varchar(255) NOT NULL,
  `url` varchar(255) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `courses`
--

INSERT INTO `courses` (`id`, `name`, `description`, `poster`, `url`) VALUES
(1, 'Python', 'Python - жоғары дәрежелі кодтың оқылуын және әзірлеушінің өнімділігін арттыруға мақсатталған жалпы мақсаттағы бағдарламалау тілі. Python тілі аз синтаксисті талап етеді. Бірақ сол уақытта стандартты кітапханасы үлкен көлемді пайдалы функцияларды қамтиды. ', 'python_course.png', 'python'),
(2, 'JavaScript', 'JavaScript — объектіге бағытталған скрипттік (немесе сценарийлер) бағдарламалау тілі. ECMAScript тілінің диалекті болып табылады. ECMA-262 спецификациясының Conformance бөліміне сәйкес ECMAScript спецификациясының жүзеге асқан өнімі. ', 'js_course.png', 'javascript'),
(3, 'Программалау негіздері', 'Программалау – 1) есептерді ЭЕМ-де шешу үшін кезектесе орындалатын командалар тізбегіне келтіру процесі', 'programming_course.png', 'programming'),
(4, 'Java тілі', ' Sun Microsystems компаниясының жасап шығарған объектіге-бағытталған бағдарламалау тілі. Java қосымшалары әдетте арнайы байт-кодта компиляцияланады.', 'java.png', 'java'),
(5, 'Swift тілі', 'Свифт - ашық, көп парадигмалық, жалпы мақсаттағы бағдарламалау тілі. Apple компаниясы негізінен iOS және macOS жасаушыларына арналған.', 'swift.png', 'swift'),
(6, 'PHP тілі', 'PHP (ағылш. PHP: Hypertext Preprocessor — «PHP: еренмәтінді алдын-ала үдірістегіш») — Веб-серверде HTML беттерін құру және дерекқормен жұмыс істеуге арналған скрипті бағдарламалау тілі.', 'php.png', 'php'),
(7, 'C++ тілі', 'C++ (дауысталуы \"си плас плас\") 1983 жылы Bell Labs зертханасында Бьёрн Страустрап дамытқан бағдарламалау тілі. 2019 жылға қарай элемдегі таралуы бойынша үшінші бағдарламалау тілі болып келеді. ', 'cpp.png', 'cpp'),
(8, 'C# тілі', 'C# (дыбысталуы си-шарп) — Объектіге-бағытталған бағдарламалау тілі. 1998—2001 жылдары Microsoft компаниясында Андерс Хейлсбергтің басшылығымен бір топ инженерлермен Microsoft .NET Framework платформасына қосымшаларды ққрастырушы тіл ретінде жасалған.', 'csh.png', 'csharp'),
(9, 'CSS3', 'CSS (ағылш. Cascading Style Sheets - стильдер кестелерінің тілі) — веб беттерді форматтауда қолданылатын белгілеу тілі. Бұл тіл XML құжаттарында да қолданыс тапты. ', 'css3.png', 'css');

-- --------------------------------------------------------

--
-- Структура таблицы `liked`
--

CREATE TABLE `liked` (
  `id` int(11) NOT NULL,
  `commentId` int(11) NOT NULL,
  `userId` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `liked`
--

INSERT INTO `liked` (`id`, `commentId`, `userId`) VALUES
(1, 1, 1),
(2, 1, 2);

-- --------------------------------------------------------

--
-- Структура таблицы `progress`
--

CREATE TABLE `progress` (
  `id` int(11) NOT NULL,
  `userId` int(11) NOT NULL,
  `courseId` int(11) NOT NULL,
  `percent` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `progress`
--

INSERT INTO `progress` (`id`, `userId`, `courseId`, `percent`) VALUES
(1, 1, 2, 60),
(2, 1, 9, 100),
(3, 1, 6, 80),
(4, 2, 7, 70),
(5, 2, 5, 80),
(6, 3, 3, 95);

-- --------------------------------------------------------

--
-- Структура таблицы `questions`
--

CREATE TABLE `questions` (
  `id` int(11) NOT NULL,
  `title` varchar(255) NOT NULL,
  `msg` text NOT NULL,
  `userId` int(11) NOT NULL,
  `categoryId` int(11) NOT NULL,
  `answerId` int(11) NOT NULL DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `questions`
--

INSERT INTO `questions` (`id`, `title`, `msg`, `userId`, `categoryId`, `answerId`) VALUES
(1, 'React, JSX арқылы мәліметтерді шығару', 'Менде объекттерден тұратын массив бар, және сол әрбір объектінің ішінде тағы да бір-бір массивтен бар. Яғни, екідеңгейлі деп айтуға болады. Соны <ul> тізімі ретінде қалай шығаруға болады?', 1, 1, 0),
(2, 'Программалар тізімі', 'Ойын жасауда қандай программа, яғни движокты қолданған дұрыс? Unity, Unreal, Construct, GameMakerStudio, RenPy. Қайсысы жақсы?', 1, 8, 0),
(3, 'Цезарь шифрі', 'Цезарь шифрін түсіндіріп бере алатын адам бар ма? Өтініш', 2, 9, 0);

-- --------------------------------------------------------

--
-- Структура таблицы `sections`
--

CREATE TABLE `sections` (
  `id` int(11) NOT NULL,
  `name` varchar(255) NOT NULL,
  `courseId` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `sections`
--

INSERT INTO `sections` (`id`, `name`, `courseId`) VALUES
(1, 'Кіріспе', 1),
(2, 'Python негіздері', 1),
(3, 'Тізімдер, кортеждер және сөздіктер', 1),
(4, 'Файлдармен жұмыс', 1),
(5, 'Жолдар', 1),
(6, 'Негізгі модульдер', 1),
(7, 'Объектілі-бағытталған бағдарламалау', 1),
(8, 'Уақытпен жұмыс', 1),
(10, 'Кіріспе', 2),
(11, 'JavaScript негіздері', 2),
(12, 'Функционалды программалау', 2),
(13, 'Объектілі-бағытталған бағдарламалау', 2),
(14, 'Объектілер', 2),
(15, 'Жолдар', 2),
(16, 'Браузермен жұмыс (BOM)', 2),
(17, 'DOM-мен жұмыс', 2),
(18, 'Жағдайлар', 2),
(19, 'Формалармен жұмыс', 2),
(20, 'JSON', 2),
(21, 'Мәліметтерді сақтау', 2),
(22, 'Коллекциялар мен итераторлар', 2),
(23, 'AJAX', 2);

-- --------------------------------------------------------

--
-- Структура таблицы `tests`
--

CREATE TABLE `tests` (
  `id` int(11) NOT NULL,
  `question` varchar(255) NOT NULL,
  `courseId` int(11) NOT NULL,
  `answer1` varchar(255) NOT NULL,
  `answer2` varchar(255) NOT NULL,
  `answer3` varchar(255) NOT NULL,
  `answer` varchar(255) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `tests`
--

INSERT INTO `tests` (`id`, `question`, `courseId`, `answer1`, `answer2`, `answer3`, `answer`) VALUES
(1, 'Python тілінің қазіргі уақытта қай нұсқасы қолданылады?', 1, '2.5', '4.8', '3.7', '3'),
(2, '\"print\" командасы не істейді?', 1, 'экранға мәтін шығарады', 'документті принтерге жібереді', 'файлды сақтайды', '1'),
(5, 'input() қандай қызмет атқарады?', 1, 'экранға мәтін шығарады', 'флешканы қосады', 'консольден мәндер қабылдайды', '3'),
(6, 'Питон тілі не үшін олай аталған?', 1, 'Питон жыланы үшін', 'Монти Пайтон шоуы атына', 'Питон алгоритмін қолдану себебі', '2'),
(7, 'Питонның ерекшелігін таңда', 1, 'ООП негізінде жасалған', 'Үтірлі нүкте қолданылмайды', 'Анимациялар жасауға арналған', '2');

-- --------------------------------------------------------

--
-- Структура таблицы `users`
--

CREATE TABLE `users` (
  `id` int(11) NOT NULL,
  `firstName` varchar(255) NOT NULL,
  `lastName` varchar(255) NOT NULL,
  `email` varchar(255) NOT NULL,
  `password` varchar(255) NOT NULL,
  `city` varchar(255) NOT NULL,
  `avatar` varchar(255) NOT NULL,
  `isAdmin` tinyint(4) NOT NULL DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `users`
--

INSERT INTO `users` (`id`, `firstName`, `lastName`, `email`, `password`, `city`, `avatar`, `isAdmin`) VALUES
(1, 'Мадияр', 'Болатов', 'im@madiyar.ml', '12345', 'Алматы', '1.png', 1),
(2, 'Асқар', 'Тулеев', 'askar@mail.ru', '12345', 'Қарағанды', '2.jpg', 0),
(3, 'Талғат', 'Муслимов', 'talgat@mail.ru', '12345', 'Жаңаөзен', 'empty.png', 0);

--
-- Индексы сохранённых таблиц
--

--
-- Индексы таблицы `blog`
--
ALTER TABLE `blog`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `books`
--
ALTER TABLE `books`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `categories_question`
--
ALTER TABLE `categories_question`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `chapters`
--
ALTER TABLE `chapters`
  ADD PRIMARY KEY (`id`),
  ADD KEY `FK_b864bfb99fd409d9822c794964d` (`sectionId`);

--
-- Индексы таблицы `comments`
--
ALTER TABLE `comments`
  ADD PRIMARY KEY (`id`),
  ADD KEY `FK_7e8d7c49f218ebb14314fdb3749` (`userId`);

--
-- Индексы таблицы `courses`
--
ALTER TABLE `courses`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `liked`
--
ALTER TABLE `liked`
  ADD PRIMARY KEY (`id`),
  ADD KEY `FK_8c9e549c614c1fe64aecb0bc869` (`commentId`),
  ADD KEY `FK_4331bd5ffff346ca620b32f9280` (`userId`);

--
-- Индексы таблицы `progress`
--
ALTER TABLE `progress`
  ADD PRIMARY KEY (`id`),
  ADD KEY `FK_0366c96237f98ea1c8ba6e1ec35` (`userId`),
  ADD KEY `FK_cb4d1477194c4ba8cf55bb6eb4b` (`courseId`);

--
-- Индексы таблицы `questions`
--
ALTER TABLE `questions`
  ADD PRIMARY KEY (`id`),
  ADD KEY `FK_bc2370231ea3e3d296963f33939` (`userId`),
  ADD KEY `FK_f7f9c25bf2bac126d941673a7dc` (`categoryId`);

--
-- Индексы таблицы `sections`
--
ALTER TABLE `sections`
  ADD PRIMARY KEY (`id`),
  ADD KEY `FK_0fc0dc8ce98e7dc47c273f85e3d` (`courseId`);

--
-- Индексы таблицы `tests`
--
ALTER TABLE `tests`
  ADD PRIMARY KEY (`id`),
  ADD KEY `FK_79f0ccaf8e323c2e8ea65ca5f54` (`courseId`);

--
-- Индексы таблицы `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `IDX_97672ac88f789774dd47f7c8be` (`email`);

--
-- AUTO_INCREMENT для сохранённых таблиц
--

--
-- AUTO_INCREMENT для таблицы `blog`
--
ALTER TABLE `blog`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;

--
-- AUTO_INCREMENT для таблицы `books`
--
ALTER TABLE `books`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=6;

--
-- AUTO_INCREMENT для таблицы `categories_question`
--
ALTER TABLE `categories_question`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=13;

--
-- AUTO_INCREMENT для таблицы `chapters`
--
ALTER TABLE `chapters`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=31;

--
-- AUTO_INCREMENT для таблицы `comments`
--
ALTER TABLE `comments`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=12;

--
-- AUTO_INCREMENT для таблицы `courses`
--
ALTER TABLE `courses`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=10;

--
-- AUTO_INCREMENT для таблицы `liked`
--
ALTER TABLE `liked`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=3;

--
-- AUTO_INCREMENT для таблицы `progress`
--
ALTER TABLE `progress`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=7;

--
-- AUTO_INCREMENT для таблицы `questions`
--
ALTER TABLE `questions`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;

--
-- AUTO_INCREMENT для таблицы `sections`
--
ALTER TABLE `sections`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=24;

--
-- AUTO_INCREMENT для таблицы `tests`
--
ALTER TABLE `tests`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=8;

--
-- AUTO_INCREMENT для таблицы `users`
--
ALTER TABLE `users`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;

--
-- Ограничения внешнего ключа сохраненных таблиц
--

--
-- Ограничения внешнего ключа таблицы `chapters`
--
ALTER TABLE `chapters`
  ADD CONSTRAINT `FK_b864bfb99fd409d9822c794964d` FOREIGN KEY (`sectionId`) REFERENCES `sections` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Ограничения внешнего ключа таблицы `comments`
--
ALTER TABLE `comments`
  ADD CONSTRAINT `FK_7e8d7c49f218ebb14314fdb3749` FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Ограничения внешнего ключа таблицы `liked`
--
ALTER TABLE `liked`
  ADD CONSTRAINT `FK_4331bd5ffff346ca620b32f9280` FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `FK_8c9e549c614c1fe64aecb0bc869` FOREIGN KEY (`commentId`) REFERENCES `comments` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Ограничения внешнего ключа таблицы `progress`
--
ALTER TABLE `progress`
  ADD CONSTRAINT `FK_0366c96237f98ea1c8ba6e1ec35` FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `FK_cb4d1477194c4ba8cf55bb6eb4b` FOREIGN KEY (`courseId`) REFERENCES `courses` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Ограничения внешнего ключа таблицы `questions`
--
ALTER TABLE `questions`
  ADD CONSTRAINT `FK_bc2370231ea3e3d296963f33939` FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `FK_f7f9c25bf2bac126d941673a7dc` FOREIGN KEY (`categoryId`) REFERENCES `categories_question` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Ограничения внешнего ключа таблицы `sections`
--
ALTER TABLE `sections`
  ADD CONSTRAINT `FK_0fc0dc8ce98e7dc47c273f85e3d` FOREIGN KEY (`courseId`) REFERENCES `courses` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Ограничения внешнего ключа таблицы `tests`
--
ALTER TABLE `tests`
  ADD CONSTRAINT `FK_79f0ccaf8e323c2e8ea65ca5f54` FOREIGN KEY (`courseId`) REFERENCES `courses` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
